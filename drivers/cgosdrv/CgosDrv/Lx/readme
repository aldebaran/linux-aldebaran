README for building the CGOS API for the Linux Operating system
=================================================================

1. General
----------
This package provides the CGOS (congatec OS API) driver for Linux.

Currently kernel versions 2.4.x, 2.6.x and 3.x are supported. Please
contact your local congatec sales partner if you need support for
other kernels.

The CGOS API is well documented in the CGOS API manual, which can
be found on our web page.


2. How to build the driver standalone 
-------------------------------------
It is possible to build the driver separately as a module. In other words,
there's no requirement for including the driver into the kernel build
mechanism. In this case it's necessary to specify the correct values for
the kernel source directory ($KERNELDIR).

In order to build the complete package for the specified kernel version,
simply issue a "make" command at the top level directory. 

The kernel source directory is set to "/lib/modules/`uname -r`/build"
by default. To change this setting, just specify KERNELDIR when executing
the make command, e.g. "make KERNELDIR=<path_to_your_kernel_sources>"

Previous builds of the CGOS library created the device node /dev/cgos automatically
by executing "mknod /dev/cgos c 99 0". This outdated method of creating the 
device node has been removed in version 1.03.019. Instead support for udev
has been added:

For kernel versions 2.6.x, the driver now creates a miscdevice and therefore
assigns the major number 10. The minor number is assigned automatically. 

Kernel-Version 2.4.x
--------------------
When using kernel version 2.4.x, the driver still utilizes device major number 
99 if CONFIG_DEVFS_FS is not set. This may conflict with other devices (e.g. the 
ppdev device). However, it's possible to assign a dedicated device major number 
by specifiying the variable cgos_major during module load. For instance to 
assign the major number 100 the command to load the driver would be: 

	  modprobe cgosdrv cgos_major=100

When using kernel version 2.4.x without DEVFS, it is the responsibility 
of the user to setup a proper device node at /dev, either with
"mknod /dev/cgos c 99 0" or with "mknod /dev/cgos c 100 0" when loading the driver
as shown above with major number 100.
 

3. How to include the driver into the kernel build mechanism
------------------------------------------------------------
Following instructions are applicable to kernel versions 2.4 and 2.6
to include the driver into the standard kernel build mechanism.
Assuming your kernel source code is located in /usr/src/linux:

- copy the directory CgosDrv to /usr/src/linux/drivers
- copy the directory CgosLib to /usr/src/linux/drivers
- include the driver in your kernel build mechanism:

  for kernel version 2.4:
   add "DRIVERS-$(CONFIG_CGOS) += drivers/CgosDrv/Lx/cgosdrv.o"
   to the top level kernel makefile (/usr/src/linux/Makefile)

   add "CgosDrv/Lx" to subdir-y variable in the drivers makefile
   (/usr/src/linux/drivers/Makefile)

   add "source drivers/CgosDrv/Lx/Config.in" to the i386-architecture
   configuration file (/usr/src/linux/arch/i386/config.in), e.g
   directly after the parport entry ("source drivers/parport/Config.in")
  
  for kernel version 2.6:
   add "obj-$(CONFIG_CGOS) += CgosDrv/Lx/"
   to the driver makefile (/usr/src/linux/drivers/Makefile)

   add "source drivers/CgosDrv/Lx/Kconfig" to the device driver 
   configuration file (/usr/src/linux/drivers/Kconfig), e.g
   directly after the parport entry ("source drivers/parport/Kconfig")
     
- configure the kernel
  
  execute "make menuconfig" for kernel configuration
  check "Congatec OS API (CGOS) support" either as built-in feature or
  as module

- build the kernel


4. SELinux
----------

Starting with version 1.03.019, the following improvements have been introduced in order 
to support SELinux:

- libcgos.so and libcgosp.o are now compiled with the -fPIC compiler switch to 
create position independent code in order to avoid text relocations.

- the memory allocation method for the CGEB code has been changed in order to
allocate memory that is executable.

2006 - 2012 (c) sml, congatec AG
